$pf-global--breakpoint--temp: 1360px;

.component {
    &.rhd-c-two-col-hero-layout {
        > .pf-l-grid {
            
            > .pf-m-12-col {
                @include nestedComponent;

                &:first-of-type {
                    @media screen and (max-width: $pf-global--breakpoint--lg - 1) {
                        grid-row: 2;
                    }
                    .component {
                        margin-top: 0;
                    }
                }

            }

            .field--name-field-column-2 {
                > .assembly.component:first-of-type {
                  // Remove margin-top from first assembly rendered in 2nd
                  // column within the Layout 2 col, sidebar left assembly type.
                  // This makes it match the behavior of the left, 1st column.
                  @media screen and (min-width: $pf-global--breakpoint--lg) {
                    margin-top: 0;
                  }
                }
            }
        }

        .field--name-field-column-1 {
          .medium-cta {
            margin-left: 0;
            margin-bottom: 0;
          }
        }

        .field--name-field-column-2 {
          .assembly-type-rich_text,
          .assembly-type-content_with_image,
          .assembly-type-events_hero ,
          .assembly-type-hero ,
          .assembly-type-product_download_hero ,
          .assembly-type-product_try_it_hero ,
          .assembly-type-sign_up_hero ,
          .assembly-type-video_hero {
            padding-left:  var(--rhd-theme--container-spacer-md);
            padding-right:  var(--rhd-theme--container-spacer-md);
          }
          .component {
            &.assembly-type-static_content_band {
              .component-limit-width {
                >.pf-l-flex {
                  &.rhd-c-card-grid__wrapper {
                    .assembly {
                      &.rhd-c-card {
                        width: calc(33.3% - var(--rhd-theme--container-spacer-lg));
                        margin-left: $rhd-flex-half--spacer;
                        margin-right: $rhd-flex-half--spacer;

                        @media screen and (max-width: $pf-global--breakpoint--temp) {
                          width: calc(50% - #{$rhd-flex--spacer});
                        }
          
                        @media screen and (max-width: $pf-global--breakpoint--lg - 1) {
                          width: calc(33% - #{$rhd-flex--spacer});
                        }

                        @media screen and (max-width: $pf-global--breakpoint--md) {
                          width: calc(50% - #{$rhd-flex--spacer});
                        }

                        @media screen and (max-width: $pf-global--breakpoint--sm) {
                          width: 100%;
                          margin: 0 0 $rhd-flex--spacer 0;
                        }
                      }
                    }
                  }
                }
              }
          
              &.four-up {
                .component-limit-width {
                  >.pf-l-flex {
                    &.rhd-c-card-grid__wrapper {
                      .assembly {
                        &.pf-l-flex,
                        &.assembly-type-node_reference {
                          width: 33%;

                          @media screen and (max-width: $pf-global--breakpoint--temp) {
                            width: 50%;
                          }
          
                          @media screen and (max-width: $pf-global--breakpoint--lg - 1) {
                            width: 33%;
                          }

                          @media screen and (max-width: $pf-global--breakpoint--md) {
                            width: 50%;
                          }

                          @media screen and (max-width: $pf-global--breakpoint--xs) {
                            width: 100%;
                          }
                        }
          
                        &.rhd-c-card {
                          width: calc(33% - #{$rhd-flex--spacer});

                          @media screen and (max-width: $pf-global--breakpoint--temp) {
                            width: calc(50% - #{$rhd-flex--spacer});
                          }
          
                          @media screen and (max-width: $pf-global--breakpoint--lg) {
                            width: calc(33% - #{$rhd-flex--spacer});
                          }

                          @media screen and (max-width: $pf-global--breakpoint--md) {
                            width: calc(50% - #{$rhd-flex--spacer});
                          }

                          @media screen and (max-width: $pf-global--breakpoint--xs) {
                            width: 100%;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }          
        }
    }
}
